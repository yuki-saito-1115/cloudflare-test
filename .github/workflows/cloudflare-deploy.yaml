name: 🚀 Deploy to Cloudflare Workers
run-name: ${{ github.event_name == 'repository_dispatch' && format('🤖 Deploy - Triggered by `{0}` webhook', github.event.action) || '🔧 Deploy - Manually triggered' }}


# プロジェクト設定 ここから ----------------------------------------------------

on:
  repository_dispatch:
    types:
      # microcms の webhook 名を配列で指定
      - microcms-news
  workflow_dispatch: # 手動トリガー可


env:
  # ビルドコマンド
  BUILD_COMMAND: npm run build
  # デプロイコマンド
  DEPLOY_COMMAND: npx wrangler deploy

# プロジェクト設定 ここまで ----------------------------------------------------


jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 ソースコードのチェックアウト
        uses: actions/checkout@v3

      - name: 🧱 Node.js のセットアップ
        uses: actions/setup-node@v3
        with:
          node-version: 22.17.0

      - name: 🗃️ npm キャッシュの復元
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-cache-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-cache-${{ runner.os }}-

      - name: 🗃️ node_modules キャッシュの復元
        id: node-cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            node-modules-

      - name: 📦 依存パッケージのインストール
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: 🗃️ ビルドキャッシュの復元
        id: build-cache
        uses: actions/cache@v3
        with:
          path: |
            dist
            .astro
            .cache
            node_modules/.cache
          key: build-${{ hashFiles('src/**/*', 'package-lock.json') }}
          restore-keys: |
            build-

      - name: 🛠️ プロジェクトのビルド
        if: steps.build-cache.outputs.cache-hit != 'true'
        run: ${{ env.BUILD_COMMAND }}

      - name: 🚚 Cloudflare Workers へデプロイ
        run: ${{ env.DEPLOY_COMMAND }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
